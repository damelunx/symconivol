% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/misc.R
\name{SDP_rnk_pred}
\alias{SDP_rnk_pred}
\title{Predict the rank of the solution of a semidefinite program}
\usage{
SDP_rnk_pred(n, m, beta = 1, C = 0.2)
}
\arguments{
\item{n}{size of matrix}

\item{m}{number of constraints}

\item{beta}{Dyson index specifying the underlying (skew-) field:
\describe{
  \item{\code{beta==1}:}{real numbers}
  \item{\code{beta==2}:}{complex numbers}
  \item{\code{beta==4}:}{quaternion numbers}
}}

\item{C}{estimated constant in the variance of index normalized curvature measures}
}
\value{
The output of \code{SDP_rnk_pred} is a  is a list of three elements:
        \itemize{
          \item \code{P}: the estimated probability vector (in form of a tibble
                          to avoid confusion about the index),
          \item \code{bnds}: the Pataki bounds,
          \item \code{plot}: a histogram plot (ggplot2) of the probability vector
                          (the vertical lines indicate the Pataki bounds).
        }
}
\description{
\code{SDP_rnk_pred} produces the (estimated) probability vector for the
rank of the solution of a random semidefinite program.
}
\details{
The semidefinite program is assumed to be of the form
\deqn{\underset{X\in\mathcal{S}^n}{\text{min}} \quad \langle C,X\rangle_{\mathcal{S}^n}}{min_(X in S^n) (C,X)_(S^n)}
\deqn{\text{subject to} \quad \langle A_k,X\rangle_{\mathcal{S}^n}=b_k ,\quad k=1,\ldots,m}{subject to (A_k,X)_(S^n)=b_k , k=1,...,m}
\deqn{X\succeq 0.}{X>=0.}
Generically, if a solution to this program exists, then it is unique, and its
rank satisfies some inequalities, known as Pataki Inequalities. In the natural
random model the rank probabilities can be expressed in terms of curvature
measures, which is what this function estimates. See the vignette accompanying
the \code{\link[symconivol]{symconivol}} package for more details and
references.
}
\section{See also}{

Package: \code{\link[symconivol]{symconivol}}
}

\examples{
library(tidyverse)
SP <- SDP_rnk_pred(30,150)

print(SP$P)
print(SP$bnds)
print(SP$plot)

}
